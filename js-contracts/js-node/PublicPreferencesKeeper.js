//
// Autogenerated by Thrift Compiler (0.10.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var common_ttypes = require('./common_types');


var ttypes = require('./preferences_types');
//HELPER FUNCTIONS AND STRUCTURES

var PublicPreferencesKeeper_readSharedPreferences_args = function(args) {
  this.ctx = null;
  if (args) {
    if (args.ctx !== undefined && args.ctx !== null) {
      this.ctx = new common_ttypes.Context(args.ctx);
    }
  }
};
PublicPreferencesKeeper_readSharedPreferences_args.prototype = {};
PublicPreferencesKeeper_readSharedPreferences_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ctx = new common_ttypes.Context();
        this.ctx.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PublicPreferencesKeeper_readSharedPreferences_args.prototype.write = function(output) {
  output.writeStructBegin('PublicPreferencesKeeper_readSharedPreferences_args');
  if (this.ctx !== null && this.ctx !== undefined) {
    output.writeFieldBegin('ctx', Thrift.Type.STRUCT, 1);
    this.ctx.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PublicPreferencesKeeper_readSharedPreferences_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof common_ttypes.Error) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyMap(args.success, [null]);
    }
    if (args.err !== undefined && args.err !== null) {
      this.err = args.err;
    }
  }
};
PublicPreferencesKeeper_readSharedPreferences_result.prototype = {};
PublicPreferencesKeeper_readSharedPreferences_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        var _size0 = 0;
        var _rtmp34;
        this.success = {};
        var _ktype1 = 0;
        var _vtype2 = 0;
        _rtmp34 = input.readMapBegin();
        _ktype1 = _rtmp34.ktype;
        _vtype2 = _rtmp34.vtype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var key6 = null;
          var val7 = null;
          key6 = input.readString();
          val7 = input.readBinary();
          this.success[key6] = val7;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new common_ttypes.Error();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PublicPreferencesKeeper_readSharedPreferences_result.prototype.write = function(output) {
  output.writeStructBegin('PublicPreferencesKeeper_readSharedPreferences_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRING, Thrift.objectLength(this.success));
    for (var kiter8 in this.success)
    {
      if (this.success.hasOwnProperty(kiter8))
      {
        var viter9 = this.success[kiter8];
        output.writeString(kiter8);
        output.writeBinary(viter9);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PublicPreferencesKeeper_readPrincipalPreferences_args = function(args) {
  this.ctx = null;
  if (args) {
    if (args.ctx !== undefined && args.ctx !== null) {
      this.ctx = new common_ttypes.Context(args.ctx);
    }
  }
};
PublicPreferencesKeeper_readPrincipalPreferences_args.prototype = {};
PublicPreferencesKeeper_readPrincipalPreferences_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ctx = new common_ttypes.Context();
        this.ctx.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PublicPreferencesKeeper_readPrincipalPreferences_args.prototype.write = function(output) {
  output.writeStructBegin('PublicPreferencesKeeper_readPrincipalPreferences_args');
  if (this.ctx !== null && this.ctx !== undefined) {
    output.writeFieldBegin('ctx', Thrift.Type.STRUCT, 1);
    this.ctx.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PublicPreferencesKeeper_readPrincipalPreferences_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof common_ttypes.Error) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyMap(args.success, [null]);
    }
    if (args.err !== undefined && args.err !== null) {
      this.err = args.err;
    }
  }
};
PublicPreferencesKeeper_readPrincipalPreferences_result.prototype = {};
PublicPreferencesKeeper_readPrincipalPreferences_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        var _size10 = 0;
        var _rtmp314;
        this.success = {};
        var _ktype11 = 0;
        var _vtype12 = 0;
        _rtmp314 = input.readMapBegin();
        _ktype11 = _rtmp314.ktype;
        _vtype12 = _rtmp314.vtype;
        _size10 = _rtmp314.size;
        for (var _i15 = 0; _i15 < _size10; ++_i15)
        {
          var key16 = null;
          var val17 = null;
          key16 = input.readString();
          val17 = input.readBinary();
          this.success[key16] = val17;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new common_ttypes.Error();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PublicPreferencesKeeper_readPrincipalPreferences_result.prototype.write = function(output) {
  output.writeStructBegin('PublicPreferencesKeeper_readPrincipalPreferences_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRING, Thrift.objectLength(this.success));
    for (var kiter18 in this.success)
    {
      if (this.success.hasOwnProperty(kiter18))
      {
        var viter19 = this.success[kiter18];
        output.writeString(kiter18);
        output.writeBinary(viter19);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PublicPreferencesKeeper_readSharedPreferencesOption_args = function(args) {
  this.ctx = null;
  this.key = null;
  if (args) {
    if (args.ctx !== undefined && args.ctx !== null) {
      this.ctx = new common_ttypes.Context(args.ctx);
    }
    if (args.key !== undefined && args.key !== null) {
      this.key = args.key;
    }
  }
};
PublicPreferencesKeeper_readSharedPreferencesOption_args.prototype = {};
PublicPreferencesKeeper_readSharedPreferencesOption_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ctx = new common_ttypes.Context();
        this.ctx.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.key = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PublicPreferencesKeeper_readSharedPreferencesOption_args.prototype.write = function(output) {
  output.writeStructBegin('PublicPreferencesKeeper_readSharedPreferencesOption_args');
  if (this.ctx !== null && this.ctx !== undefined) {
    output.writeFieldBegin('ctx', Thrift.Type.STRUCT, 1);
    this.ctx.write(output);
    output.writeFieldEnd();
  }
  if (this.key !== null && this.key !== undefined) {
    output.writeFieldBegin('key', Thrift.Type.STRING, 3);
    output.writeString(this.key);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PublicPreferencesKeeper_readSharedPreferencesOption_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof common_ttypes.Error) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.err !== undefined && args.err !== null) {
      this.err = args.err;
    }
  }
};
PublicPreferencesKeeper_readSharedPreferencesOption_result.prototype = {};
PublicPreferencesKeeper_readSharedPreferencesOption_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readBinary();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new common_ttypes.Error();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PublicPreferencesKeeper_readSharedPreferencesOption_result.prototype.write = function(output) {
  output.writeStructBegin('PublicPreferencesKeeper_readSharedPreferencesOption_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeBinary(this.success);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PublicPreferencesKeeper_readPrincipalPreferencesOption_args = function(args) {
  this.ctx = null;
  this.key = null;
  if (args) {
    if (args.ctx !== undefined && args.ctx !== null) {
      this.ctx = new common_ttypes.Context(args.ctx);
    }
    if (args.key !== undefined && args.key !== null) {
      this.key = args.key;
    }
  }
};
PublicPreferencesKeeper_readPrincipalPreferencesOption_args.prototype = {};
PublicPreferencesKeeper_readPrincipalPreferencesOption_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ctx = new common_ttypes.Context();
        this.ctx.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.key = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PublicPreferencesKeeper_readPrincipalPreferencesOption_args.prototype.write = function(output) {
  output.writeStructBegin('PublicPreferencesKeeper_readPrincipalPreferencesOption_args');
  if (this.ctx !== null && this.ctx !== undefined) {
    output.writeFieldBegin('ctx', Thrift.Type.STRUCT, 1);
    this.ctx.write(output);
    output.writeFieldEnd();
  }
  if (this.key !== null && this.key !== undefined) {
    output.writeFieldBegin('key', Thrift.Type.STRING, 3);
    output.writeString(this.key);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PublicPreferencesKeeper_readPrincipalPreferencesOption_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof common_ttypes.Error) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.err !== undefined && args.err !== null) {
      this.err = args.err;
    }
  }
};
PublicPreferencesKeeper_readPrincipalPreferencesOption_result.prototype = {};
PublicPreferencesKeeper_readPrincipalPreferencesOption_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readBinary();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new common_ttypes.Error();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PublicPreferencesKeeper_readPrincipalPreferencesOption_result.prototype.write = function(output) {
  output.writeStructBegin('PublicPreferencesKeeper_readPrincipalPreferencesOption_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeBinary(this.success);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PublicPreferencesKeeper_writePrincipalPreferencesOption_args = function(args) {
  this.ctx = null;
  this.key = null;
  this.value = null;
  if (args) {
    if (args.ctx !== undefined && args.ctx !== null) {
      this.ctx = new common_ttypes.Context(args.ctx);
    }
    if (args.key !== undefined && args.key !== null) {
      this.key = args.key;
    }
    if (args.value !== undefined && args.value !== null) {
      this.value = args.value;
    }
  }
};
PublicPreferencesKeeper_writePrincipalPreferencesOption_args.prototype = {};
PublicPreferencesKeeper_writePrincipalPreferencesOption_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ctx = new common_ttypes.Context();
        this.ctx.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.key = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.value = input.readBinary();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PublicPreferencesKeeper_writePrincipalPreferencesOption_args.prototype.write = function(output) {
  output.writeStructBegin('PublicPreferencesKeeper_writePrincipalPreferencesOption_args');
  if (this.ctx !== null && this.ctx !== undefined) {
    output.writeFieldBegin('ctx', Thrift.Type.STRUCT, 1);
    this.ctx.write(output);
    output.writeFieldEnd();
  }
  if (this.key !== null && this.key !== undefined) {
    output.writeFieldBegin('key', Thrift.Type.STRING, 2);
    output.writeString(this.key);
    output.writeFieldEnd();
  }
  if (this.value !== null && this.value !== undefined) {
    output.writeFieldBegin('value', Thrift.Type.STRING, 3);
    output.writeBinary(this.value);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PublicPreferencesKeeper_writePrincipalPreferencesOption_result = function(args) {
  this.err = null;
  if (args instanceof common_ttypes.Error) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined && args.err !== null) {
      this.err = args.err;
    }
  }
};
PublicPreferencesKeeper_writePrincipalPreferencesOption_result.prototype = {};
PublicPreferencesKeeper_writePrincipalPreferencesOption_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new common_ttypes.Error();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PublicPreferencesKeeper_writePrincipalPreferencesOption_result.prototype.write = function(output) {
  output.writeStructBegin('PublicPreferencesKeeper_writePrincipalPreferencesOption_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PublicPreferencesKeeperClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
PublicPreferencesKeeperClient.prototype = {};
PublicPreferencesKeeperClient.prototype.seqid = function() { return this._seqid; };
PublicPreferencesKeeperClient.prototype.new_seqid = function() { return this._seqid += 1; };
PublicPreferencesKeeperClient.prototype.readSharedPreferences = function(ctx, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_readSharedPreferences(ctx);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_readSharedPreferences(ctx);
  }
};

PublicPreferencesKeeperClient.prototype.send_readSharedPreferences = function(ctx) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('readSharedPreferences', Thrift.MessageType.CALL, this.seqid());
  var args = new PublicPreferencesKeeper_readSharedPreferences_args();
  args.ctx = ctx;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

PublicPreferencesKeeperClient.prototype.recv_readSharedPreferences = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PublicPreferencesKeeper_readSharedPreferences_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.err) {
    return callback(result.err);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('readSharedPreferences failed: unknown result');
};
PublicPreferencesKeeperClient.prototype.readPrincipalPreferences = function(ctx, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_readPrincipalPreferences(ctx);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_readPrincipalPreferences(ctx);
  }
};

PublicPreferencesKeeperClient.prototype.send_readPrincipalPreferences = function(ctx) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('readPrincipalPreferences', Thrift.MessageType.CALL, this.seqid());
  var args = new PublicPreferencesKeeper_readPrincipalPreferences_args();
  args.ctx = ctx;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

PublicPreferencesKeeperClient.prototype.recv_readPrincipalPreferences = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PublicPreferencesKeeper_readPrincipalPreferences_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.err) {
    return callback(result.err);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('readPrincipalPreferences failed: unknown result');
};
PublicPreferencesKeeperClient.prototype.readSharedPreferencesOption = function(ctx, key, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_readSharedPreferencesOption(ctx, key);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_readSharedPreferencesOption(ctx, key);
  }
};

PublicPreferencesKeeperClient.prototype.send_readSharedPreferencesOption = function(ctx, key) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('readSharedPreferencesOption', Thrift.MessageType.CALL, this.seqid());
  var args = new PublicPreferencesKeeper_readSharedPreferencesOption_args();
  args.ctx = ctx;
  args.key = key;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

PublicPreferencesKeeperClient.prototype.recv_readSharedPreferencesOption = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PublicPreferencesKeeper_readSharedPreferencesOption_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.err) {
    return callback(result.err);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('readSharedPreferencesOption failed: unknown result');
};
PublicPreferencesKeeperClient.prototype.readPrincipalPreferencesOption = function(ctx, key, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_readPrincipalPreferencesOption(ctx, key);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_readPrincipalPreferencesOption(ctx, key);
  }
};

PublicPreferencesKeeperClient.prototype.send_readPrincipalPreferencesOption = function(ctx, key) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('readPrincipalPreferencesOption', Thrift.MessageType.CALL, this.seqid());
  var args = new PublicPreferencesKeeper_readPrincipalPreferencesOption_args();
  args.ctx = ctx;
  args.key = key;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

PublicPreferencesKeeperClient.prototype.recv_readPrincipalPreferencesOption = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PublicPreferencesKeeper_readPrincipalPreferencesOption_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.err) {
    return callback(result.err);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('readPrincipalPreferencesOption failed: unknown result');
};
PublicPreferencesKeeperClient.prototype.writePrincipalPreferencesOption = function(ctx, key, value, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_writePrincipalPreferencesOption(ctx, key, value);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_writePrincipalPreferencesOption(ctx, key, value);
  }
};

PublicPreferencesKeeperClient.prototype.send_writePrincipalPreferencesOption = function(ctx, key, value) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('writePrincipalPreferencesOption', Thrift.MessageType.CALL, this.seqid());
  var args = new PublicPreferencesKeeper_writePrincipalPreferencesOption_args();
  args.ctx = ctx;
  args.key = key;
  args.value = value;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

PublicPreferencesKeeperClient.prototype.recv_writePrincipalPreferencesOption = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PublicPreferencesKeeper_writePrincipalPreferencesOption_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.err) {
    return callback(result.err);
  }
  callback(null);
};
var PublicPreferencesKeeperProcessor = exports.Processor = function(handler) {
  this._handler = handler;
}
;
PublicPreferencesKeeperProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}
;
PublicPreferencesKeeperProcessor.prototype.process_readSharedPreferences = function(seqid, input, output) {
  var args = new PublicPreferencesKeeper_readSharedPreferences_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.readSharedPreferences.length === 1) {
    Q.fcall(this._handler.readSharedPreferences, args.ctx)
      .then(function(result) {
        var result_obj = new PublicPreferencesKeeper_readSharedPreferences_result({success: result});
        output.writeMessageBegin("readSharedPreferences", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof common_ttypes.Error) {
          result = new PublicPreferencesKeeper_readSharedPreferences_result(err);
          output.writeMessageBegin("readSharedPreferences", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("readSharedPreferences", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.readSharedPreferences(args.ctx, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof common_ttypes.Error) {
        result_obj = new PublicPreferencesKeeper_readSharedPreferences_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("readSharedPreferences", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("readSharedPreferences", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PublicPreferencesKeeperProcessor.prototype.process_readPrincipalPreferences = function(seqid, input, output) {
  var args = new PublicPreferencesKeeper_readPrincipalPreferences_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.readPrincipalPreferences.length === 1) {
    Q.fcall(this._handler.readPrincipalPreferences, args.ctx)
      .then(function(result) {
        var result_obj = new PublicPreferencesKeeper_readPrincipalPreferences_result({success: result});
        output.writeMessageBegin("readPrincipalPreferences", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof common_ttypes.Error) {
          result = new PublicPreferencesKeeper_readPrincipalPreferences_result(err);
          output.writeMessageBegin("readPrincipalPreferences", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("readPrincipalPreferences", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.readPrincipalPreferences(args.ctx, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof common_ttypes.Error) {
        result_obj = new PublicPreferencesKeeper_readPrincipalPreferences_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("readPrincipalPreferences", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("readPrincipalPreferences", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PublicPreferencesKeeperProcessor.prototype.process_readSharedPreferencesOption = function(seqid, input, output) {
  var args = new PublicPreferencesKeeper_readSharedPreferencesOption_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.readSharedPreferencesOption.length === 2) {
    Q.fcall(this._handler.readSharedPreferencesOption, args.ctx, args.key)
      .then(function(result) {
        var result_obj = new PublicPreferencesKeeper_readSharedPreferencesOption_result({success: result});
        output.writeMessageBegin("readSharedPreferencesOption", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof common_ttypes.Error) {
          result = new PublicPreferencesKeeper_readSharedPreferencesOption_result(err);
          output.writeMessageBegin("readSharedPreferencesOption", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("readSharedPreferencesOption", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.readSharedPreferencesOption(args.ctx, args.key, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof common_ttypes.Error) {
        result_obj = new PublicPreferencesKeeper_readSharedPreferencesOption_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("readSharedPreferencesOption", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("readSharedPreferencesOption", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PublicPreferencesKeeperProcessor.prototype.process_readPrincipalPreferencesOption = function(seqid, input, output) {
  var args = new PublicPreferencesKeeper_readPrincipalPreferencesOption_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.readPrincipalPreferencesOption.length === 2) {
    Q.fcall(this._handler.readPrincipalPreferencesOption, args.ctx, args.key)
      .then(function(result) {
        var result_obj = new PublicPreferencesKeeper_readPrincipalPreferencesOption_result({success: result});
        output.writeMessageBegin("readPrincipalPreferencesOption", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof common_ttypes.Error) {
          result = new PublicPreferencesKeeper_readPrincipalPreferencesOption_result(err);
          output.writeMessageBegin("readPrincipalPreferencesOption", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("readPrincipalPreferencesOption", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.readPrincipalPreferencesOption(args.ctx, args.key, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof common_ttypes.Error) {
        result_obj = new PublicPreferencesKeeper_readPrincipalPreferencesOption_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("readPrincipalPreferencesOption", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("readPrincipalPreferencesOption", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PublicPreferencesKeeperProcessor.prototype.process_writePrincipalPreferencesOption = function(seqid, input, output) {
  var args = new PublicPreferencesKeeper_writePrincipalPreferencesOption_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.writePrincipalPreferencesOption.length === 3) {
    Q.fcall(this._handler.writePrincipalPreferencesOption, args.ctx, args.key, args.value)
      .then(function(result) {
        var result_obj = new PublicPreferencesKeeper_writePrincipalPreferencesOption_result({success: result});
        output.writeMessageBegin("writePrincipalPreferencesOption", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof common_ttypes.Error) {
          result = new PublicPreferencesKeeper_writePrincipalPreferencesOption_result(err);
          output.writeMessageBegin("writePrincipalPreferencesOption", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("writePrincipalPreferencesOption", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.writePrincipalPreferencesOption(args.ctx, args.key, args.value, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof common_ttypes.Error) {
        result_obj = new PublicPreferencesKeeper_writePrincipalPreferencesOption_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("writePrincipalPreferencesOption", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("writePrincipalPreferencesOption", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
